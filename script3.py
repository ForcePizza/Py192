# рядки та виведення на екран
str1 = "string 1"            # звичайний рядок
str2 = 'string 1'            # теж звичайний рядок
str3 = ''' це
багаторядковий
рядок '''
str4 = """ або з такими лапками """
'''
    Багаторядкові вирази часто вживають як великі
    коментарі
'''

# работа з рядками на прикладі арифметичних операцій
x = 14
y = 6
str5 = "x + y = %d" % ( x + y )   # форматний рядок - заміст плейсхолдерів підставляються значення
print( str5 )
print( "x - y = ", x - y, ", x * y = ", x * y,  sep = '' )
print( "x / y = %f, x // y = %f, x %% y = %d" % ( x / y, x // y, x % y ) )
# !! звичайне ділення "/" вжите до цілих чисел має дробовий результат 
# для цілочисельного ділення вживається оператор "//"
print( 0.1 + 0.2 )  # 0.30000000000000004  - дробові числа - звичайні, як в інших мовах
print( f"{x} ** {y} ** {3} =", x ** y ** 3 )   # ** - піднесення до ступеня
# для цілих чисел - майже без обмежень (4300 цифр у числі)

# цикли: існуют двох видів - for-in (~foreach) та while (без do-while)
for x in (1,3,5) :
    print( x, end = " " )   # пробіл замість розриву рядка
print()   # ~println
# безпосередньо цикла-лічильника немає, але для цих задач є генератор послідовності - range
for i in range(10) :   # 10 чисел від 0 до 9 (10 не включно)
    print( i, end = " " )
print()

for i in range(1, 10) :  # від 1 до 10(не вкл - до 9)
    print( i, end = " " )
print()

for i in range(1, 10, 2) :   # від 1 до 10 (не вкл) через 2 (крок циклу)
    print( i, end = " " )
print()

for i in range(10, 0, -1) :    # інверсний від 10 до 0(не вкл - до 1), через -1
    print( i, end = " " )
print()

x = 10
while x > 0 :
    print( x, end = ' ' )
    x -= 1    # немає скорочених x++ та x--
print()

# оскільки немає do-while, поширеною є практика while True ... break
# приклад: користувач вводить два числа, вони не мають збігатись, інакше - повтор другого числа
x = input( "Введіть число 1: " )
while True :
    y = input( "Введіть число 2: " )
    if x != y :
        break
    print( "Числа однакові", end = ' ' )
    