# Основні синтаксичні конструкції
# Загальне оформлення - кожна інструкція рекомендується у окремому рядку
x = 10; print( x )  # кілька інструкцій у рядку розділяют ";" але це не поширена практика
x = 20 ;    # ";" не заборонена, але і не потрібна
print( x )

x = int( input( "Введіть число х = ") )
# Умовний оператор та оформлення блоків
if x < 10 :                    #   Умовний оператор не вимагає дужок (), блок починається ":"
    print( "х є " )            # блок коду формується відступами
    print( "меншим" )          # команди належать блоку якщо вони мають той самий відступ,
    print( "за 10" )           # що й інші
elif x < 20 :                  #   if передбачає додаткові умови elif
  print( "х належить " )       # у іншому блоці відступими можуть бути іншими, але
  print( "діапазону" )         # однаковими для цього блоку. Величини відсупів вибирають
  print( "10 - 20" )           # в залежності від ступеня вкладеності. Як правило 2-4 пробіли
elif x < 30 or x == 30 :       #   elif блоків може бути скільки завгодно
    print( "x < 30" )          # !! НЕМОЖНА вживати табуляцію замість пробілів - якщо візуально 
    print( "or x == 30" )      # блок з однаковим відступом, то це не значить, що це єдиний блок
elif x <= 40 and not x == 40:  # сполучники умов - мнемонічні оператори or, and, not 
    print( "x < 40" )          # 
    print( "без рівності" )    # 
else :                         # 
    print( "else" )            # 

y = 11 if x < 10 else 12       # тернарний вираз
y = x < 10 and 11 or 12        # умовний вираз повертає результат останнього операнду
                               # + зупинка на першій "порушеній" умові

x, y = 10, 20  # ~списки присвоювання
x, y = y, x    # вираз для обміна значеннями